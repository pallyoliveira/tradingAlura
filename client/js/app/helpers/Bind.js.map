{"version":3,"sources":["../../app-es6/helpers/Bind.js"],"names":["ProxyFactory","Bind","model","view","props","proxy","create","update"],"mappings":";;;;;;;;;;;;;;;AAESA,kB,yBAAAA,Y;;;sBACIC,I;AACX;AACA,oBAAYC,KAAZ,EAAmBC,IAAnB,EAAmC;AAAA;;AAAA,0CAAPC,KAAO;AAAPA,eAAO;AAAA;;AACjC,YAAIC,QAAQL,aAAaM,MAAb,CAAoBJ,KAApB,EAA2BE,KAA3B,EAAkC;AAAA,iBAC9CD,KAAKI,MAAL,CAAYL,KAAZ,CAD8C;AAAA,SAAlC,CAAZ;AAEAC,aAAKI,MAAL,CAAYL,KAAZ;AACA,eAAOG,KAAP;AACD,O","file":"Bind.js","sourcesContent":["// associação entre o modelo e a View, ou seja, sempre que alterarmos o modelo, queremos disparar a atualização da View.\r\n// mecanismo de data binding, semelhante aos frameworks como AngularJS \r\nimport { ProxyFactory } from \"../services/Proxy.Factory\";\r\nexport class Bind {\r\n  // rest operator: se torna um array\r\n  constructor(model, view, ...props) {\r\n    let proxy = ProxyFactory.create(model, props, model => \r\n    view.update(model));\r\n    view.update(model);\r\n    return proxy;\r\n  }\r\n}"]}