{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["ListaNegociacoes","Mensagem","NegociacoesView","MensagemView","NegociacaoService","DateHelper","Bind","Negociacao","NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_ordemAtual","_listaNegociacoes","_mensagem","_service","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","erro","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","apaga","esvazia","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordena","a","b","importa"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["// a sintaxe do ES6 (de importação e exportação de módulos),\r\nimport { ListaNegociacoes } from \"../models/ListaNegociacoes\";\r\nimport { Mensagem } from \"../models/Mensagem\";\r\nimport { NegociacoesView } from \"../views/NegociacoesView\";\r\nimport { MensagemView } from \"../views/MensagemView\";\r\nimport { NegociacaoService } from \"../services/NegociacaoService\";\r\nimport { DateHelper } from \"../helpers/DateHelper\";\r\nimport { Bind } from \"../helpers/Bind\";\r\nimport { Negociacao } from \"../models/Negociacao\";\r\n\r\nexport class NegociacaoController {\r\n  constructor() {\r\n    let $ = document.querySelector.bind(document);\r\n    this._inputData = $('#data');\r\n    this._inputQuantidade = $('#quantidade');\r\n    this._inputValor = $('#valor');\r\n    this._ordemAtual = '';\r\n    this._listaNegociacoes = new Bind(\r\n      new ListaNegociacoes(),\r\n      new NegociacoesView($('#negociacoesView')), 'adiciona', 'esvazia', 'ordena', 'inverteOrdem')\r\n    this._mensagem = new Bind(\r\n      new Mensagem(),\r\n      new MensagemView($('#mensagemView')), 'texto');\r\n    this._ordemAtual = '';\r\n    this._service = new NegociacaoService();\r\n    // invocando o método getConnection da nossa ConnectionFactory. Como o método retorna uma promise, quando encadeamos uma chamada à função then temos acesso à conexão. Veja, não queremos trabalhar com uma conexão diretamente, queremos um dao, é por isso que no mesmo then em que obtemos a conexão retornamos implicitamente (arrow function sem block) uma instância de NegociacaoDao\r\n    this._init();\r\n  }\r\n\r\n  _init() {\r\n    this._service\r\n      .lista()\r\n      .then(negociacoes =>\r\n        negociacoes.forEach(negociacao =>\r\n          this._listaNegociacoes.adiciona(negociacao)))\r\n      .catch(erro => this._mensagem.texto = erro);\r\n    setInterval(() => {\r\n      this.importaNegociacoes();\r\n    }, 3000);\r\n  }\r\n\r\n  adiciona(event) {\r\n    event.preventDefault();\r\n    let negociacao = this._criaNegociacao();\r\n    this._service\r\n      .cadastra(negociacao)\r\n      .then(mensagem => {\r\n        this._listaNegociacoes.adiciona(negociacao);\r\n        this._mensagem.texto = mensagem;\r\n        this._limpaFormulario();\r\n      })\r\n      .catch(erro => this._mensagem.texto = erro);\r\n  }\r\n\r\n  apaga() {\r\n    this._service\r\n      .apaga()\r\n      .then(mensagem => {\r\n        this._mensagem.texto = mensagem;\r\n        this._listaNegociacoes.esvazia()\r\n      })\r\n      .catch(erro => this._mensagem.texto = erro);\r\n  }\r\n\r\n  _criaNegociacao() {\r\n    return new Negociacao(DateHelper.textoParaData(\r\n      this._inputData.value),\r\n      parseInt(this._inputQuantidade.value),\r\n      parseFloat(this._inputValor.value));\r\n  }\r\n\r\n  _limpaFormulario() {\r\n    this._inputData.value = '';\r\n    this._inputQuantidade.value = '';\r\n    this._inputValor.value = '';\r\n    this._inputData.focus();\r\n  }\r\n\r\n  ordena(coluna) {\r\n    if (this._ordemAtual == coluna) {\r\n      this._listaNegociacoes.inverteOrdem();\r\n    } else {\r\n      this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\r\n    }\r\n    this._ordemAtual = coluna;\r\n  }\r\n\r\n  importaNegociacoes() {\r\n    this._service\r\n      .importa(this._listaNegociacoes.negociacoes)\r\n      .then(negociacoes => negociacoes.forEach(negociacao => {\r\n        this._listaNegociacoes.adiciona(negociacao);\r\n        this._mensagem.texto = 'Negociações do período importadas'\r\n      }))\r\n      .catch(erro => this._mensagem.texto = erro);\r\n  }\r\n}\r\n\r\n// let negociacaoController = new NegociacaoController();\r\n// export function currentInstance() {\r\n//   return negociacaoController;\r\n// }"]}